version: 2.1

jobs:
  lint:
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout
      - run:
          name: install hadolint
          command: |
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            sudo chmod +x /bin/hadolint
      - run:
          name: lint
          command: |
            make build-lint-pom
            make lint-docker
      - persist_to_workspace:
          root: ~/
          paths:
            - project/
  test:
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run:
          name: run spring boot test
          command: |
            make run-test

  push-image:
    docker:
      - image: docker:17.05.0-ce-git
    working_directory: ~/dock
    steps:
      - checkout
      - setup_remote_docker
      - run: 
          name: push docker image 
          command: |
            make build-lint-pom
            docker build --tag=projectfinal .
            docker login --username ${D_U} --password ${D_P}
            docker tag projectfinal nguyendt9/projectfinal
            docker push nguyendt9/projectfinal


  go-live:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install tar gzip
          command: |
            yum install -y tar gzip
      - run:
          name: Install eksctl
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version
      - run:      
          name: Install kubectl
          command: |
            curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.20.4/2021-04-12/bin/linux/amd64/kubectl
            sudo chmod +x ./kubectl
            mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
            kubectl version --short --client
      - run:
          name: Deploy using eksctl, kubectl
          command: |
            eksctl create cluster -f clusterconfg.yaml
            kubectl cluster-info
            kubectl get nodes -o wide
            kubectl create deploy projectfinal --image=nguyendt9/projectfinal
            kubectl expose deployment/projectfinal --type="LoadBalancer" --port 80
            kubectl get services
workflows:
  default:
    jobs:
      # - lint     
      # - test:
      #     requires: [lint]
      - push-image
      - go-live:
          requires: [push-image]